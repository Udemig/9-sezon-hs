"use strict";
/*
 * void:
 * genellikle bir fonksiyonun bir ÅŸey dÃ¶ndÃ¼rmediÄŸini ifade etmek iÃ§in kullanÄ±lÄ±r
 
 * void varsa return satÄ±rÄ± yoktur (varsada sadece undefined dÃ¶ndrÃ¼ebilir)
 
 * return satÄ±rÄ±nda bir deÄŸer dÃ¶nÃ¼yorsa veri tipi void deÄŸildir
 */
function selamla() {
    console.log("selam, nasÄ±lsÄ±n?");
    // sadece fonksiyonu durdurmaya yarayan return kullanÄ±labilir
    // hiÃ§ bir deÄŸer return edilemez
    return;
}
selamla();
/*
 * Never: hata Ã¼reten fonksiyonlarÄ±n tipini belirtirken kullanÄ±lÄ±r
 * Ã–rneÄŸin bir fonksiyon sÃ¼rekli olarak hata fÄ±rlatmasÄ± durumu
 * "HiÃ§ bir zman bu noktaya ulaÅŸÄ±lamaz" durumunu ifade eder

*/
function hataFonksiyonu(message) {
    throw new Error(message);
    console.log("merhaba");
}
try {
    hataFonksiyonu("sorun oldu");
    console.log("iÅŸlem baÅŸarÄ±lÄ±");
}
catch (err) {
    console.log("hata oldu ğŸ’¥", err);
}
/*
 * SonuÃ§ olarak
 * fonksiyonun return tipi:
 * any ise her tÃ¼rlÃ¼ deÄŸeri dÃ¶ndÃ¼rebilir
 * void ise hiÃ§ bir deÄŸer dÃ¶ndÃ¼remez
 * never bir hata fÄ±rlatÄ±r (tani return satÄ±rÄ± hiÃ§ olmaz)
*/
